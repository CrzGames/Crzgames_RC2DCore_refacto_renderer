#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_OceanUniforms
{
    float time;
    float waveSpeed;
    float waveAmplitude;
    float waveFrequency;
    float2 scrollSpeed;
};

struct main0_out
{
    float4 out_var_SV_Target [[color(0)]];
};

struct main0_in
{
    float2 in_var_TEXCOORD0 [[user(locn0)]];
};

fragment main0_out main0(main0_in in [[stage_in]], constant type_OceanUniforms& OceanUniforms [[buffer(0)]], texture2d<float> waterTexture [[texture(0)]], sampler waterSampler [[sampler(0)]])
{
    main0_out out = {};
    float _44 = OceanUniforms.time * OceanUniforms.waveSpeed;
    out.out_var_SV_Target = waterTexture.sample(waterSampler, (float2((in.in_var_TEXCOORD0.x + (sin(_44 + (in.in_var_TEXCOORD0.y * OceanUniforms.waveFrequency)) * OceanUniforms.waveAmplitude)) + ((sin((_44 * 1.5) + (((in.in_var_TEXCOORD0.x + in.in_var_TEXCOORD0.y) * OceanUniforms.waveFrequency) * 2.0)) * OceanUniforms.waveAmplitude) * 0.300000011920928955078125), (in.in_var_TEXCOORD0.y + ((cos((_44 * 0.699999988079071044921875) + ((in.in_var_TEXCOORD0.x * OceanUniforms.waveFrequency) * 1.2000000476837158203125)) * OceanUniforms.waveAmplitude) * 0.5)) + ((cos((_44 * 1.2000000476837158203125) + (((in.in_var_TEXCOORD0.x - in.in_var_TEXCOORD0.y) * OceanUniforms.waveFrequency) * 1.5)) * OceanUniforms.waveAmplitude) * 0.20000000298023223876953125)) + (OceanUniforms.scrollSpeed * OceanUniforms.time)));
    return out;
}

