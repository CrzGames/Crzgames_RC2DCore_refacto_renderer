#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_Context
{
    float4 params0;
    float4 params1;
};

struct main0_out
{
    float4 out_var_SV_Target [[color(0)]];
};

struct main0_in
{
    float4 in_var_COLOR0 [[user(locn0)]];
    float2 in_var_TEXCOORD0 [[user(locn1)]];
};

fragment main0_out main0(main0_in in [[stage_in]], constant type_Context& Context [[buffer(0)]], texture2d<float> u_texture [[texture(0)]], sampler u_sampler [[sampler(0)]])
{
    main0_out out = {};
    float2 _69 = fract((in.in_var_TEXCOORD0 + float2((Context.params0.x * 0.0199999995529651641845703125) * Context.params1.z, (Context.params0.x * 0.0130000002682209014892578125) * Context.params1.z)) * Context.params0.w);
    float _74 = _69.x;
    float _80 = _69.y;
    float _85 = sin(((_80 * 14.0) - (Context.params0.x * 0.89999997615814208984375)) * 3.1415927410125732421875);
    float _86 = _74 + _80;
    float4 _103 = u_texture.sample(u_sampler, fract(_69 + ((float2(sin(((_74 * 10.0) + (Context.params0.x * 1.2000000476837158203125)) * 3.1415927410125732421875) - _85, _85 + sin(((_86 * 8.0) + (Context.params0.x * 0.64999997615814208984375)) * 3.1415927410125732421875)) * 0.5) * (((float2(1.0) / precise::max(Context.params1.xy, float2(1.0))) * Context.params0.z) * Context.params0.y)))) * in.in_var_COLOR0;
    float2 _111 = _103.xy + float2(0.008000000379979610443115234375 * sin((Context.params0.x * 1.7000000476837158203125) + (_86 * 20.0)));
    out.out_var_SV_Target = float4(_111.x, _111.y, _103.z, _103.w);
    return out;
}

