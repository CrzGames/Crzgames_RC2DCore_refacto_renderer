#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_UniformBlock
{
    float2 resolution;
    float time;
};

struct main0_out
{
    float4 out_var_SV_Target0 [[color(0)]];
};

fragment main0_out main0(constant type_UniformBlock& UniformBlock [[buffer(0)]], float4 gl_FragCoord [[position]])
{
    main0_out out = {};
    float2 _52 = ((gl_FragCoord.xy * 2.0) - UniformBlock.resolution) / float2(UniformBlock.resolution.y);
    float2 _54;
    float3 _57;
    _54 = _52;
    _57 = float3(0.0);
    for (float _59 = 0.0; _59 < 4.0; )
    {
        float2 _63 = _54 * 1.5;
        float2 _55 = fract(_63) - float2(0.5);
        float _66 = length(_52);
        _54 = _55;
        _57 += ((float3(0.5) + (float3(0.5) * cos(((float3(1.0) * ((_66 + (_59 * 0.4000000059604644775390625)) + (UniformBlock.time * 0.4000000059604644775390625))) + float3(0.263000011444091796875, 0.41600000858306884765625, 0.556999981403350830078125)) * 6.28318023681640625))) * powr(0.00999999977648258209228515625 / abs(sin(((length(_55) * exp(-_66)) * 8.0) + UniformBlock.time) * 0.125), 1.2000000476837158203125));
        _59 += 1.0;
        continue;
    }
    out.out_var_SV_Target0 = float4(_57, 1.0);
    return out;
}

