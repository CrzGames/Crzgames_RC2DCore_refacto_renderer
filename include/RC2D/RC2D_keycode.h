

#ifndef RC2D_KEYCODE_H
#define RC2D_KEYCODE_H

#include <SDL3/SDL_keycode.h>

/* Configuration pour les définitions de fonctions C, même lors de l'utilisation de C++ */
#ifdef __cplusplus
extern "C" {
#endif

/**
 * La représentation de la clé virtuelle RC2D.
 *
 * Les valeurs de ce type sont utilisées pour représenter les touches du clavier en utilisant 
 * la disposition actuelle du clavier. Ces valeurs comprennent des valeurs Unicode représentant 
 * le caractère non modifié qui serait généré en appuyant sur la touche, 
 * ou une constante `SDLK_*` pour les touches qui ne génèrent pas de caractères.
 *
 * Une exception spéciale est constituée par les touches numériques situées en haut du clavier, qui correspondent à
 * SDLK_0...SDLK_9 sur les claviers AZERTY.
 *
 * Les touches dont le bit `SDLK_EXTENDED_MASK` est défini ne correspondent pas à un point de code scancode ou unicode.
 *
 * \since Ce type de données est disponible depuis RC2D 1.0.0.
 */
typedef enum RC2D_Keycode
{
    RC2D_UNKNOWN = SDLK_UNKNOWN,

    RC2D_RETURN = SDLK_RETURN,
    RC2D_ESCAPE = SDLK_ESCAPE,
    RC2D_BACKSPACE = SDLK_BACKSPACE,
    RC2D_TAB = SDLK_TAB,
    RC2D_SPACE = SDLK_SPACE,
    RC2D_EXCLAIM = SDLK_EXCLAIM,
    RC2D_DBLAPOSTROPHE = SDLK_DBLAPOSTROPHE,
    RC2D_HASH = SDLK_HASH,
    RC2D_DOLLAR = SDLK_DOLLAR,
    RC2D_PERCENT = SDLK_PERCENT,
    RC2D_AMPERSAND = SDLK_AMPERSAND,
    RC2D_APOSTROPHE = SDLK_APOSTROPHE,
    RC2D_LEFTPAREN = SDLK_LEFTPAREN,
    RC2D_RIGHTPAREN = SDLK_RIGHTPAREN,
    RC2D_ASTERISK = SDLK_ASTERISK,
    RC2D_PLUS = SDLK_PLUS,
    RC2D_COMMA = SDLK_COMMA,
    RC2D_MINUS = SDLK_MINUS,
    RC2D_PERIOD = SDLK_PERIOD,
    RC2D_SLASH = SDLK_SLASH,
    RC2D_0 = SDLK_0,
    RC2D_1 = SDLK_1,
    RC2D_2 = SDLK_2,
    RC2D_3 = SDLK_3,
    RC2D_4 = SDLK_4,
    RC2D_5 = SDLK_5,
    RC2D_6 = SDLK_6,
    RC2D_7 = SDLK_7,
    RC2D_8 = SDLK_8,
    RC2D_9 = SDLK_9,
    RC2D_COLON = SDLK_COLON,
    RC2D_SEMICOLON = SDLK_SEMICOLON,
    RC2D_LESS = SDLK_LESS,
    RC2D_EQUALS = SDLK_EQUALS,
    RC2D_GREATER = SDLK_GREATER,
    RC2D_QUESTION = SDLK_QUESTION,
    RC2D_AT = SDLK_AT,
    RC2D_LEFTBRACKET = SDLK_LEFTBRACKET,
    RC2D_BACKSLASH = SDLK_BACKSLASH,
    RC2D_RIGHTBRACKET = SDLK_RIGHTBRACKET,
    RC2D_CARET = SDLK_CARET,
    RC2D_UNDERSCORE = SDLK_UNDERSCORE,
    RC2D_GRAVE = SDLK_GRAVE,
    RC2D_a = SDLK_A,
    RC2D_b = SDLK_B,
    RC2D_c = SDLK_C,
    RC2D_d = SDLK_D,
    RC2D_e = SDLK_E,
    RC2D_f = SDLK_F,
    RC2D_g = SDLK_G,
    RC2D_h = SDLK_H,
    RC2D_i = SDLK_I,
    RC2D_j = SDLK_J,
    RC2D_k = SDLK_K,
    RC2D_l = SDLK_L,
    RC2D_m = SDLK_M,
    RC2D_n = SDLK_N,
    RC2D_o = SDLK_O,
    RC2D_p = SDLK_P,
    RC2D_q = SDLK_Q,
    RC2D_r = SDLK_R,
    RC2D_s = SDLK_S,
    RC2D_t = SDLK_T,
    RC2D_u = SDLK_U,
    RC2D_v = SDLK_V,
    RC2D_w = SDLK_W,
    RC2D_x = SDLK_X,
    RC2D_y = SDLK_Y,
    RC2D_z = SDLK_Z,
    RC2D_LEFTBRACE = SDLK_LEFTBRACE,
    RC2D_PIPE = SDLK_PIPE,
    RC2D_RIGHTBRACE = SDLK_RIGHTBRACE,
    RC2D_TILDE = SDLK_TILDE,
    RC2D_DELETE = SDLK_DELETE,
    RC2D_PLUSMINUS = SDLK_PLUSMINUS,

    RC2D_CAPSLOCK = SDLK_CAPSLOCK,
    RC2D_F1 = SDLK_F1,
    RC2D_F2 = SDLK_F2,
    RC2D_F3 = SDLK_F3,
    RC2D_F4 = SDLK_F4,
    RC2D_F5 = SDLK_F5,
    RC2D_F6 = SDLK_F6,
    RC2D_F7 = SDLK_F7,
    RC2D_F8 = SDLK_F8,
    RC2D_F9 = SDLK_F9,
    RC2D_F10 = SDLK_F10,
    RC2D_F11 = SDLK_F11,
    RC2D_F12 = SDLK_F12,
    RC2D_PRINTSCREEN = SDLK_PRINTSCREEN,
    RC2D_SCROLLLOCK = SDLK_SCROLLLOCK,
    RC2D_PAUSE = SDLK_PAUSE,
    RC2D_INSERT = SDLK_INSERT,
    RC2D_HOME = SDLK_HOME,
    RC2D_PAGEUP = SDLK_PAGEUP,
    RC2D_END = SDLK_END,
    RC2D_PAGEDOWN = SDLK_PAGEDOWN,
    RC2D_RIGHT = SDLK_RIGHT,
    RC2D_LEFT = SDLK_LEFT,
    RC2D_DOWN = SDLK_DOWN,
    RC2D_UP = SDLK_UP,

    RC2D_NUMLOCKCLEAR = SDLK_NUMLOCKCLEAR,
    RC2D_KP_DIVIDE = SDLK_KP_DIVIDE,
    RC2D_KP_MULTIPLY = SDLK_KP_MULTIPLY,
    RC2D_KP_MINUS = SDLK_KP_MINUS,
    RC2D_KP_PLUS = SDLK_KP_PLUS,
    RC2D_KP_ENTER = SDLK_KP_ENTER,
    RC2D_KP_1 = SDLK_KP_1,
    RC2D_KP_2 = SDLK_KP_2,
    RC2D_KP_3 = SDLK_KP_3,
    RC2D_KP_4 = SDLK_KP_4,
    RC2D_KP_5 = SDLK_KP_5,
    RC2D_KP_6 = SDLK_KP_6,
    RC2D_KP_7 = SDLK_KP_7,
    RC2D_KP_8 = SDLK_KP_8,
    RC2D_KP_9 = SDLK_KP_9,
    RC2D_KP_0 = SDLK_KP_0,
    RC2D_KP_PERIOD = SDLK_KP_PERIOD,

    RC2D_APPLICATION = SDLK_APPLICATION,
    RC2D_POWER = SDLK_POWER,
    RC2D_KP_EQUALS = SDLK_KP_EQUALS,
    RC2D_F13 = SDLK_F13,
    RC2D_F14 = SDLK_F14,
    RC2D_F15 = SDLK_F15,
    RC2D_F16 = SDLK_F16,
    RC2D_F17 = SDLK_F17,
    RC2D_F18 = SDLK_F18,
    RC2D_F19 = SDLK_F19,
    RC2D_F20 = SDLK_F20,
    RC2D_F21 = SDLK_F21,
    RC2D_F22 = SDLK_F22,
    RC2D_F23 = SDLK_F23,
    RC2D_F24 = SDLK_F24,
    RC2D_EXECUTE = SDLK_EXECUTE,
    RC2D_HELP = SDLK_HELP,
    RC2D_MENU = SDLK_MENU,
    RC2D_SELECT = SDLK_SELECT,
    RC2D_STOP = SDLK_STOP,
    RC2D_AGAIN = SDLK_AGAIN,
    RC2D_UNDO = SDLK_UNDO,
    RC2D_CUT = SDLK_CUT,
    RC2D_COPY = SDLK_COPY,
    RC2D_PASTE = SDLK_PASTE,
    RC2D_FIND = SDLK_FIND,
    RC2D_MUTE = SDLK_MUTE,
    RC2D_VOLUMEUP = SDLK_VOLUMEUP,
    RC2D_VOLUMEDOWN = SDLK_VOLUMEDOWN,
    RC2D_KP_COMMA = SDLK_KP_COMMA,
    RC2D_KP_EQUALSAS400 = SDLK_KP_EQUALSAS400,

    RC2D_ALTERASE = SDLK_ALTERASE,
    RC2D_SYSREQ = SDLK_SYSREQ,
    RC2D_CANCEL = SDLK_CANCEL,
    RC2D_CLEAR = SDLK_CLEAR,
    RC2D_PRIOR = SDLK_PRIOR,
    RC2D_RETURN2 = SDLK_RETURN2,
    RC2D_SEPARATOR = SDLK_SEPARATOR,
    RC2D_OUT = SDLK_OUT,
    RC2D_OPER = SDLK_OPER,
    RC2D_CLEARAGAIN = SDLK_CLEARAGAIN,
    RC2D_CRSEL = SDLK_CRSEL,
    RC2D_EXSEL = SDLK_EXSEL,

    RC2D_KP_00 = SDLK_KP_00,
    RC2D_KP_000 = SDLK_KP_000,
    RC2D_THOUSANDSSEPARATOR = SDLK_THOUSANDSSEPARATOR,
    RC2D_DECIMALSEPARATOR = SDLK_DECIMALSEPARATOR,
    RC2D_CURRENCYUNIT = SDLK_CURRENCYUNIT,
    RC2D_CURRENCYSUBUNIT = SDLK_CURRENCYSUBUNIT,
    RC2D_KP_LEFTPAREN = SDLK_KP_LEFTPAREN,
    RC2D_KP_RIGHTPAREN = SDLK_KP_RIGHTPAREN,
    RC2D_KP_LEFTBRACE = SDLK_KP_LEFTBRACE,
    RC2D_KP_RIGHTBRACE = SDLK_KP_RIGHTBRACE,
    RC2D_KP_TAB = SDLK_KP_TAB,
    RC2D_KP_BACKSPACE = SDLK_KP_BACKSPACE,
    RC2D_KP_A = SDLK_KP_A,
    RC2D_KP_B = SDLK_KP_B,
    RC2D_KP_C = SDLK_KP_C,
    RC2D_KP_D = SDLK_KP_D,
    RC2D_KP_E = SDLK_KP_E,
    RC2D_KP_F = SDLK_KP_F,
    RC2D_KP_XOR = SDLK_KP_XOR,
    RC2D_KP_POWER = SDLK_KP_POWER,
    RC2D_KP_PERCENT = SDLK_KP_PERCENT,
    RC2D_KP_LESS = SDLK_KP_LESS,
    RC2D_KP_GREATER = SDLK_KP_GREATER,
    RC2D_KP_AMPERSAND = SDLK_KP_AMPERSAND,
    RC2D_KP_DBLAMPERSAND = SDLK_KP_DBLAMPERSAND,
    RC2D_KP_VERTICALBAR = SDLK_KP_VERTICALBAR,
    RC2D_KP_DBLVERTICALBAR = SDLK_KP_DBLVERTICALBAR,
    RC2D_KP_COLON = SDLK_KP_COLON,
    RC2D_KP_HASH = SDLK_KP_HASH,
    RC2D_KP_SPACE = SDLK_KP_SPACE,
    RC2D_KP_AT = SDLK_KP_AT,
    RC2D_KP_EXCLAM = SDLK_KP_EXCLAM,
    RC2D_KP_MEMSTORE = SDLK_KP_MEMSTORE,
    RC2D_KP_MEMRECALL = SDLK_KP_MEMRECALL,
    RC2D_KP_MEMCLEAR = SDLK_KP_MEMCLEAR,
    RC2D_KP_MEMADD = SDLK_KP_MEMADD,
    RC2D_KP_MEMSUBTRACT = SDLK_KP_MEMSUBTRACT,
    RC2D_KP_MEMMULTIPLY = SDLK_KP_MEMMULTIPLY,
    RC2D_KP_MEMDIVIDE = SDLK_KP_MEMDIVIDE,
    RC2D_KP_PLUSMINUS = SDLK_KP_PLUSMINUS,
    RC2D_KP_CLEAR = SDLK_KP_CLEAR,
    RC2D_KP_CLEARENTRY = SDLK_KP_CLEARENTRY,
    RC2D_KP_BINARY = SDLK_KP_BINARY,
    RC2D_KP_OCTAL = SDLK_KP_OCTAL,
    RC2D_KP_DECIMAL = SDLK_KP_DECIMAL,
    RC2D_KP_HEXADECIMAL = SDLK_KP_HEXADECIMAL,

    RC2D_LCTRL = SDLK_LCTRL,
    RC2D_LSHIFT = SDLK_LSHIFT,
    RC2D_LALT = SDLK_LALT,
    RC2D_LGUI = SDLK_LGUI,
    RC2D_RCTRL = SDLK_RCTRL,
    RC2D_RSHIFT = SDLK_RSHIFT,
    RC2D_RALT = SDLK_RALT,
    RC2D_RGUI = SDLK_RGUI,

    RC2D_MODE = SDLK_MODE,
    RC2D_SLEEP = SDLK_SLEEP,
    RC2D_WAKE = SDLK_WAKE,
    RC2D_CHANNEL_INCREMENT = SDLK_CHANNEL_INCREMENT,
    RC2D_CHANNEL_DECREMENT = SDLK_CHANNEL_DECREMENT,
    RC2D_MEDIA_PLAY = SDLK_MEDIA_PLAY,
    RC2D_MEDIA_PAUSE = SDLK_MEDIA_PAUSE,
    RC2D_MEDIA_RECORD = SDLK_MEDIA_RECORD,
    RC2D_MEDIA_FAST_FORWARD = SDLK_MEDIA_FAST_FORWARD,
    RC2D_MEDIA_REWIND = SDLK_MEDIA_REWIND,
    RC2D_MEDIA_NEXT_TRACK = SDLK_MEDIA_NEXT_TRACK,
    RC2D_MEDIA_PREVIOUS_TRACK = SDLK_MEDIA_PREVIOUS_TRACK,
    RC2D_MEDIA_STOP = SDLK_MEDIA_STOP,
    RC2D_MEDIA_EJECT = SDLK_MEDIA_EJECT,
    RC2D_MEDIA_PLAY_PAUSE = SDLK_MEDIA_PLAY_PAUSE,
    RC2D_MEDIA_SELECT = SDLK_MEDIA_SELECT,
    RC2D_AC_NEW = SDLK_AC_NEW,
    RC2D_AC_OPEN = SDLK_AC_OPEN,
    RC2D_AC_CLOSE = SDLK_AC_CLOSE,
    RC2D_AC_EXIT = SDLK_AC_EXIT,
    RC2D_AC_SAVE = SDLK_AC_SAVE,
    RC2D_AC_PRINT = SDLK_AC_PRINT,
    RC2D_AC_PROPERTIES = SDLK_AC_PROPERTIES,
    RC2D_AC_SEARCH = SDLK_AC_SEARCH,
    RC2D_AC_HOME = SDLK_AC_HOME,
    RC2D_AC_BACK = SDLK_AC_BACK,
    RC2D_AC_FORWARD = SDLK_AC_FORWARD,
    RC2D_AC_STOP = SDLK_AC_STOP,
    RC2D_AC_REFRESH = SDLK_AC_REFRESH,
    RC2D_AC_BOOKMARKS = SDLK_AC_BOOKMARKS,
    RC2D_SOFTLEFT = SDLK_SOFTLEFT,
    RC2D_SOFTRIGHT = SDLK_SOFTRIGHT,
    RC2D_CALL = SDLK_CALL,
    RC2D_ENDCALL = SDLK_ENDCALL,

    RC2D_LEFT_TAB = SDLK_LEFT_TAB,
    RC2D_LEVEL5_SHIFT = SDLK_LEVEL5_SHIFT,
    RC2D_MULTI_KEY_COMPOSE = SDLK_MULTI_KEY_COMPOSE,
    RC2D_LMETA = SDLK_LMETA,
    RC2D_RMETA = SDLK_RMETA,
    RC2D_LHYPER = SDLK_LHYPER,
    RC2D_RHYPER = SDLK_RHYPER
} RC2D_Keycode;

/**
 * Modificateurs de clé valides (éventuellement combinés par OU).
 *
 * \since Ce type de données est disponible depuis RC2D 1.0.0.
 */
typedef Uint16 RC2D_Keymod;

#define RC2D_KMOD_NONE   SDL_KMOD_NONE
#define RC2D_KMOD_LSHIFT SDL_KMOD_LSHIFT
#define RC2D_KMOD_RSHIFT SDL_KMOD_RSHIFT
#define RC2D_KMOD_LEVEL5 SDL_KMOD_LEVEL5
#define RC2D_KMOD_LCTRL  SDL_KMOD_LCTRL
#define RC2D_KMOD_RCTRL  SDL_KMOD_RCTRL
#define RC2D_KMOD_LALT   SDL_KMOD_LALT
#define RC2D_KMOD_RALT   SDL_KMOD_RALT
#define RC2D_KMOD_LGUI   SDL_KMOD_LGUI
#define RC2D_KMOD_RGUI   SDL_KMOD_RGUI
#define RC2D_KMOD_NUM    SDL_KMOD_NUM
#define RC2D_KMOD_CAPS   SDL_KMOD_CAPS
#define RC2D_KMOD_MODE   SDL_KMOD_MODE
#define RC2D_KMOD_SCROLL SDL_KMOD_SCROLL
#define RC2D_KMOD_CTRL   SDL_KMOD_CTRL
#define RC2D_KMOD_SHIFT  SDL_KMOD_SHIFT
#define RC2D_KMOD_ALT    SDL_KMOD_ALT
#define RC2D_KMOD_GUI    SDL_KMOD_GUI

#ifdef __cplusplus
}
#endif

#endif /* RC2D_KEYCODE_H */