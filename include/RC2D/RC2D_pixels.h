#ifndef RC2D_PIXELS_H
#define RC2D_PIXELS_H

#include <SDL3/SDL_pixels.h>

/* Configuration pour les définitions de fonctions C, même lors de l'utilisation de C++ */
#ifdef __cplusplus
extern "C" {
#endif

/**
 * # CategoryPixels
 *
 * Facilités de gestion des pixels RC2D, enveloppant les formats de pixels SDL3 
 * et les définitions de l'espace colorimétrique.
 *
 * Cet en-tête fournit des enums et des structures pour la gestion des formats de pixels, 
 * des espaces colorimétriques et des propriétés connexes, reflétant les capacités de 
 * gestion des pixels de SDL3.
 *
 * Pour des explications détaillées sur les formats de pixels, les espaces colorimétriques 
 * et les concepts connexes, se référer à la documentation SDL3 : SDL_pixels.h
 */

/** 
 * Énumération des formats de pixels, englobant toutes les valeurs de SDL_PixelFormat 
 * 
 * \since Cette énumération est disponible depuis RC2D 1.0.0.
*/
typedef enum RC2D_PixelFormat {
    RC2D_PIXELFORMAT_UNKNOWN = SDL_PIXELFORMAT_UNKNOWN,
    RC2D_PIXELFORMAT_INDEX1LSB = SDL_PIXELFORMAT_INDEX1LSB,
    RC2D_PIXELFORMAT_INDEX1MSB = SDL_PIXELFORMAT_INDEX1MSB,
    RC2D_PIXELFORMAT_INDEX2LSB = SDL_PIXELFORMAT_INDEX2LSB,
    RC2D_PIXELFORMAT_INDEX2MSB = SDL_PIXELFORMAT_INDEX2MSB,
    RC2D_PIXELFORMAT_INDEX4LSB = SDL_PIXELFORMAT_INDEX4LSB,
    RC2D_PIXELFORMAT_INDEX4MSB = SDL_PIXELFORMAT_INDEX4MSB,
    RC2D_PIXELFORMAT_INDEX8 = SDL_PIXELFORMAT_INDEX8,
    RC2D_PIXELFORMAT_RGB332 = SDL_PIXELFORMAT_RGB332,
    RC2D_PIXELFORMAT_XRGB4444 = SDL_PIXELFORMAT_XRGB4444,
    RC2D_PIXELFORMAT_XBGR4444 = SDL_PIXELFORMAT_XBGR4444,
    RC2D_PIXELFORMAT_XRGB1555 = SDL_PIXELFORMAT_XRGB1555,
    RC2D_PIXELFORMAT_XBGR1555 = SDL_PIXELFORMAT_XBGR1555,
    RC2D_PIXELFORMAT_ARGB4444 = SDL_PIXELFORMAT_ARGB4444,
    RC2D_PIXELFORMAT_RGBA4444 = SDL_PIXELFORMAT_RGBA4444,
    RC2D_PIXELFORMAT_ABGR4444 = SDL_PIXELFORMAT_ABGR4444,
    RC2D_PIXELFORMAT_BGRA4444 = SDL_PIXELFORMAT_BGRA4444,
    RC2D_PIXELFORMAT_ARGB1555 = SDL_PIXELFORMAT_ARGB1555,
    RC2D_PIXELFORMAT_RGBA5551 = SDL_PIXELFORMAT_RGBA5551,
    RC2D_PIXELFORMAT_ABGR1555 = SDL_PIXELFORMAT_ABGR1555,
    RC2D_PIXELFORMAT_BGRA5551 = SDL_PIXELFORMAT_BGRA5551,
    RC2D_PIXELFORMAT_RGB565 = SDL_PIXELFORMAT_RGB565,
    RC2D_PIXELFORMAT_BGR565 = SDL_PIXELFORMAT_BGR565,
    RC2D_PIXELFORMAT_RGB24 = SDL_PIXELFORMAT_RGB24,
    RC2D_PIXELFORMAT_BGR24 = SDL_PIXELFORMAT_BGR24,
    RC2D_PIXELFORMAT_XRGB8888 = SDL_PIXELFORMAT_XRGB8888,
    RC2D_PIXELFORMAT_RGBX8888 = SDL_PIXELFORMAT_RGBX8888,
    RC2D_PIXELFORMAT_XBGR8888 = SDL_PIXELFORMAT_XBGR8888,
    RC2D_PIXELFORMAT_BGRX8888 = SDL_PIXELFORMAT_BGRX8888,
    RC2D_PIXELFORMAT_ARGB8888 = SDL_PIXELFORMAT_ARGB8888,
    RC2D_PIXELFORMAT_RGBA8888 = SDL_PIXELFORMAT_RGBA8888,
    RC2D_PIXELFORMAT_ABGR8888 = SDL_PIXELFORMAT_ABGR8888,
    RC2D_PIXELFORMAT_BGRA8888 = SDL_PIXELFORMAT_BGRA8888,
    RC2D_PIXELFORMAT_XRGB2101010 = SDL_PIXELFORMAT_XRGB2101010,
    RC2D_PIXELFORMAT_XBGR2101010 = SDL_PIXELFORMAT_XBGR2101010,
    RC2D_PIXELFORMAT_ARGB2101010 = SDL_PIXELFORMAT_ARGB2101010,
    RC2D_PIXELFORMAT_ABGR2101010 = SDL_PIXELFORMAT_ABGR2101010,
    RC2D_PIXELFORMAT_RGB48 = SDL_PIXELFORMAT_RGB48,
    RC2D_PIXELFORMAT_BGR48 = SDL_PIXELFORMAT_BGR48,
    RC2D_PIXELFORMAT_RGBA64 = SDL_PIXELFORMAT_RGBA64,
    RC2D_PIXELFORMAT_ARGB64 = SDL_PIXELFORMAT_ARGB64,
    RC2D_PIXELFORMAT_BGRA64 = SDL_PIXELFORMAT_BGRA64,
    RC2D_PIXELFORMAT_ABGR64 = SDL_PIXELFORMAT_ABGR64,
    RC2D_PIXELFORMAT_RGB48_FLOAT = SDL_PIXELFORMAT_RGB48_FLOAT,
    RC2D_PIXELFORMAT_BGR48_FLOAT = SDL_PIXELFORMAT_BGR48_FLOAT,
    RC2D_PIXELFORMAT_RGBA64_FLOAT = SDL_PIXELFORMAT_RGBA64_FLOAT,
    RC2D_PIXELFORMAT_ARGB64_FLOAT = SDL_PIXELFORMAT_ARGB64_FLOAT,
    RC2D_PIXELFORMAT_BGRA64_FLOAT = SDL_PIXELFORMAT_BGRA64_FLOAT,
    RC2D_PIXELFORMAT_ABGR64_FLOAT = SDL_PIXELFORMAT_ABGR64_FLOAT,
    RC2D_PIXELFORMAT_RGB96_FLOAT = SDL_PIXELFORMAT_RGB96_FLOAT,
    RC2D_PIXELFORMAT_BGR96_FLOAT = SDL_PIXELFORMAT_BGR96_FLOAT,
    RC2D_PIXELFORMAT_RGBA128_FLOAT = SDL_PIXELFORMAT_RGBA128_FLOAT,
    RC2D_PIXELFORMAT_ARGB128_FLOAT = SDL_PIXELFORMAT_ARGB128_FLOAT,
    RC2D_PIXELFORMAT_BGRA128_FLOAT = SDL_PIXELFORMAT_BGRA128_FLOAT,
    RC2D_PIXELFORMAT_ABGR128_FLOAT = SDL_PIXELFORMAT_ABGR128_FLOAT,
    RC2D_PIXELFORMAT_YV12 = SDL_PIXELFORMAT_YV12,
    RC2D_PIXELFORMAT_IYUV = SDL_PIXELFORMAT_IYUV,
    RC2D_PIXELFORMAT_YUY2 = SDL_PIXELFORMAT_YUY2,
    RC2D_PIXELFORMAT_UYVY = SDL_PIXELFORMAT_UYVY,
    RC2D_PIXELFORMAT_YVYU = SDL_PIXELFORMAT_YVYU,
    RC2D_PIXELFORMAT_NV12 = SDL_PIXELFORMAT_NV12,
    RC2D_PIXELFORMAT_NV21 = SDL_PIXELFORMAT_NV21,
    RC2D_PIXELFORMAT_P010 = SDL_PIXELFORMAT_P010,
    RC2D_PIXELFORMAT_EXTERNAL_OES = SDL_PIXELFORMAT_EXTERNAL_OES,
    RC2D_PIXELFORMAT_MJPG = SDL_PIXELFORMAT_MJPG,
} RC2D_PixelFormat;

/* Aliases RC2D pour formats courants en macros (pas dans une enum) */
#define RC2D_PIXELFORMAT_RGBA32 SDL_PIXELFORMAT_RGBA32
#define RC2D_PIXELFORMAT_ARGB32 SDL_PIXELFORMAT_ARGB32
#define RC2D_PIXELFORMAT_BGRA32 SDL_PIXELFORMAT_BGRA32
#define RC2D_PIXELFORMAT_ABGR32 SDL_PIXELFORMAT_ABGR32
#define RC2D_PIXELFORMAT_RGBX32 SDL_PIXELFORMAT_RGBX32
#define RC2D_PIXELFORMAT_XRGB32 SDL_PIXELFORMAT_XRGB32
#define RC2D_PIXELFORMAT_BGRX32 SDL_PIXELFORMAT_BGRX32
#define RC2D_PIXELFORMAT_XBGR32 SDL_PIXELFORMAT_XBGR32

/**
 * Définitions de l'espace colorimétrique.
 *
 * Étant donné que des espaces colorimétriques similaires peuvent varier 
 * dans leurs détails (matrice, fonction de transfert, etc.), il ne s'agit pas 
 * d'une liste exhaustive, mais plutôt d'un échantillon représentatif 
 * des types d'espaces colorimétriques pris en charge par SDL.  
 *
 * \since Cette énumération est disponible depuis RC2D 1.0.0.
 *
 * \sa RC2D_ColorPrimaries
 * \sa RC2D_ColorRange
 * \sa RC2D_ColorType
 * \sa RC2D_MatrixCoefficients
 * \sa RC2D_TransferCharacteristics
 */
typedef enum RC2D_Colorspace {
    RC2D_COLORSPACE_UNKNOWN = SDL_COLORSPACE_UNKNOWN,
    RC2D_COLORSPACE_SRGB = SDL_COLORSPACE_SRGB,
    RC2D_COLORSPACE_SRGB_LINEAR = SDL_COLORSPACE_SRGB_LINEAR,
    RC2D_COLORSPACE_HDR10 = SDL_COLORSPACE_HDR10,
    RC2D_COLORSPACE_JPEG = SDL_COLORSPACE_JPEG,
    RC2D_COLORSPACE_BT601_LIMITED = SDL_COLORSPACE_BT601_LIMITED,
    RC2D_COLORSPACE_BT601_FULL = SDL_COLORSPACE_BT601_FULL,
    RC2D_COLORSPACE_BT709_LIMITED = SDL_COLORSPACE_BT709_LIMITED,
    RC2D_COLORSPACE_BT709_FULL = SDL_COLORSPACE_BT709_FULL,
    RC2D_COLORSPACE_BT2020_LIMITED = SDL_COLORSPACE_BT2020_LIMITED,
    RC2D_COLORSPACE_BT2020_FULL = SDL_COLORSPACE_BT2020_FULL,
    RC2D_COLORSPACE_RGB_DEFAULT = SDL_COLORSPACE_RGB_DEFAULT,
    RC2D_COLORSPACE_YUV_DEFAULT = SDL_COLORSPACE_YUV_DEFAULT
} RC2D_Colorspace;

/**
 * Type de pixel.
 * 
 * \since Cette énumération est disponible depuis RC2D 1.0.0.
 */
typedef enum RC2D_PixelType {
    RC2D_PIXELTYPE_UNKNOWN = SDL_PIXELTYPE_UNKNOWN,
    RC2D_PIXELTYPE_INDEX1 = SDL_PIXELTYPE_INDEX1,
    RC2D_PIXELTYPE_INDEX4 = SDL_PIXELTYPE_INDEX4,
    RC2D_PIXELTYPE_INDEX8 = SDL_PIXELTYPE_INDEX8,
    RC2D_PIXELTYPE_PACKED8 = SDL_PIXELTYPE_PACKED8,
    RC2D_PIXELTYPE_PACKED16 = SDL_PIXELTYPE_PACKED16,
    RC2D_PIXELTYPE_PACKED32 = SDL_PIXELTYPE_PACKED32,
    RC2D_PIXELTYPE_ARRAYU8 = SDL_PIXELTYPE_ARRAYU8,
    RC2D_PIXELTYPE_ARRAYU16 = SDL_PIXELTYPE_ARRAYU16,
    RC2D_PIXELTYPE_ARRAYU32 = SDL_PIXELTYPE_ARRAYU32,
    RC2D_PIXELTYPE_ARRAYF16 = SDL_PIXELTYPE_ARRAYF16,
    RC2D_PIXELTYPE_ARRAYF32 = SDL_PIXELTYPE_ARRAYF32,
    RC2D_PIXELTYPE_INDEX2 = SDL_PIXELTYPE_INDEX2
} RC2D_PixelType;

/**
 * Ordre des pixels de la carte bitmap, bit de poids fort -> bit de poids faible.
 * 
 * \since Cette énumération est disponible depuis RC2D 1.0.0.
 */
typedef enum RC2D_BitmapOrder {
    RC2D_BITMAPORDER_NONE = SDL_BITMAPORDER_NONE,
    RC2D_BITMAPORDER_4321 = SDL_BITMAPORDER_4321,
    RC2D_BITMAPORDER_1234 = SDL_BITMAPORDER_1234
} RC2D_BitmapOrder;

/**
 * Ordre des composants emballés, bit de poids fort -> bit de poids faible.
 * 
 * \since Cette énumération est disponible depuis RC2D 1.0.0.
 */
typedef enum RC2D_PackedOrder {
    RC2D_PACKEDORDER_NONE = SDL_PACKEDORDER_NONE,
    RC2D_PACKEDORDER_XRGB = SDL_PACKEDORDER_XRGB,
    RC2D_PACKEDORDER_RGBX = SDL_PACKEDORDER_RGBX,
    RC2D_PACKEDORDER_ARGB = SDL_PACKEDORDER_ARGB,
    RC2D_PACKEDORDER_RGBA = SDL_PACKEDORDER_RGBA,
    RC2D_PACKEDORDER_XBGR = SDL_PACKEDORDER_XBGR,
    RC2D_PACKEDORDER_BGRX = SDL_PACKEDORDER_BGRX,
    RC2D_PACKEDORDER_ABGR = SDL_PACKEDORDER_ABGR,
    RC2D_PACKEDORDER_BGRA = SDL_PACKEDORDER_BGRA
} RC2D_PackedOrder;

/**
 * Ordre des composants du tableau, octet de poids faible -> octet de poids fort.
 * 
 * \since Cette énumération est disponible depuis RC2D 1.0.0.
 */
typedef enum RC2D_ArrayOrder {
    RC2D_ARRAYORDER_NONE = SDL_ARRAYORDER_NONE,
    RC2D_ARRAYORDER_RGB = SDL_ARRAYORDER_RGB,
    RC2D_ARRAYORDER_RGBA = SDL_ARRAYORDER_RGBA,
    RC2D_ARRAYORDER_ARGB = SDL_ARRAYORDER_ARGB,
    RC2D_ARRAYORDER_BGR = SDL_ARRAYORDER_BGR,
    RC2D_ARRAYORDER_BGRA = SDL_ARRAYORDER_BGRA,
    RC2D_ARRAYORDER_ABGR = SDL_ARRAYORDER_ABGR
} RC2D_ArrayOrder;

/**
 * Disposition des composants en paquet.
 * 
 * \since Cette énumération est disponible depuis RC2D 1.0.0.
 */
typedef enum RC2D_PackedLayout {
    RC2D_PACKEDLAYOUT_NONE = SDL_PACKEDLAYOUT_NONE,
    RC2D_PACKEDLAYOUT_332 = SDL_PACKEDLAYOUT_332,
    RC2D_PACKEDLAYOUT_4444 = SDL_PACKEDLAYOUT_4444,
    RC2D_PACKEDLAYOUT_1555 = SDL_PACKEDLAYOUT_1555,
    RC2D_PACKEDLAYOUT_5551 = SDL_PACKEDLAYOUT_5551,
    RC2D_PACKEDLAYOUT_565 = SDL_PACKEDLAYOUT_565,
    RC2D_PACKEDLAYOUT_8888 = SDL_PACKEDLAYOUT_8888,
    RC2D_PACKEDLAYOUT_2101010 = SDL_PACKEDLAYOUT_2101010,
    RC2D_PACKEDLAYOUT_1010102 = SDL_PACKEDLAYOUT_1010102
} RC2D_PackedLayout;

/**
 * Type de couleur de l'espace colorimétrique.
 * 
 * \since Cette énumération est disponible depuis RC2D 1.0.0.
 */
typedef enum RC2D_ColorType {
    RC2D_COLOR_TYPE_UNKNOWN = SDL_COLOR_TYPE_UNKNOWN,
    RC2D_COLOR_TYPE_RGB = SDL_COLOR_TYPE_RGB,
    RC2D_COLOR_TYPE_YCBCR = SDL_COLOR_TYPE_YCBCR
} RC2D_ColorType;

/**
 * Gamme de couleurs de l'espace colorimétrique, telle que décrite par
 * https://www.itu.int/rec/R-REC-BT.2100-2-201807-I/en
 *
 * \since Cette énumération est disponible depuis RC2D 1.0.0.
 */
typedef enum RC2D_ColorRange {
    RC2D_COLOR_RANGE_UNKNOWN = SDL_COLOR_RANGE_UNKNOWN,
    RC2D_COLOR_RANGE_LIMITED = SDL_COLOR_RANGE_LIMITED,
    RC2D_COLOR_RANGE_FULL = SDL_COLOR_RANGE_FULL
} RC2D_ColorRange;

/**
 * Les primaires de couleur de l'espace colorimétrique, telles que décrites par
 * https://www.itu.int/rec/T-REC-H.273-201612-S/en
 *
 * \since Cette énumération est disponible depuis RC2D 1.0.0.
 */
typedef enum RC2D_ColorPrimaries {
    RC2D_COLOR_PRIMARIES_UNKNOWN = SDL_COLOR_PRIMARIES_UNKNOWN,
    RC2D_COLOR_PRIMARIES_BT709 = SDL_COLOR_PRIMARIES_BT709,
    RC2D_COLOR_PRIMARIES_UNSPECIFIED = SDL_COLOR_PRIMARIES_UNSPECIFIED,
    RC2D_COLOR_PRIMARIES_BT470M = SDL_COLOR_PRIMARIES_BT470M,
    RC2D_COLOR_PRIMARIES_BT470BG = SDL_COLOR_PRIMARIES_BT470BG,
    RC2D_COLOR_PRIMARIES_BT601 = SDL_COLOR_PRIMARIES_BT601,
    RC2D_COLOR_PRIMARIES_SMPTE240 = SDL_COLOR_PRIMARIES_SMPTE240,
    RC2D_COLOR_PRIMARIES_GENERIC_FILM = SDL_COLOR_PRIMARIES_GENERIC_FILM,
    RC2D_COLOR_PRIMARIES_BT2020 = SDL_COLOR_PRIMARIES_BT2020,
    RC2D_COLOR_PRIMARIES_XYZ = SDL_COLOR_PRIMARIES_XYZ,
    RC2D_COLOR_PRIMARIES_SMPTE431 = SDL_COLOR_PRIMARIES_SMPTE431,
    RC2D_COLOR_PRIMARIES_SMPTE432 = SDL_COLOR_PRIMARIES_SMPTE432,
    RC2D_COLOR_PRIMARIES_EBU3213 = SDL_COLOR_PRIMARIES_EBU3213,
    RC2D_COLOR_PRIMARIES_CUSTOM = SDL_COLOR_PRIMARIES_CUSTOM
} RC2D_ColorPrimaries;

/**
 * Caractéristiques de transfert de l'espace colorimétrique.
 *
 * Ces caractéristiques sont décrites sur le site https://www.itu.int/rec/T-REC-H.273-201612-S/en
 * 
 * \since Cette énumération est disponible depuis RC2D 1.0.0.
 */
typedef enum RC2D_TransferCharacteristics {
    RC2D_TRANSFER_CHARACTERISTICS_UNKNOWN = SDL_TRANSFER_CHARACTERISTICS_UNKNOWN,
    RC2D_TRANSFER_CHARACTERISTICS_BT709 = SDL_TRANSFER_CHARACTERISTICS_BT709,
    RC2D_TRANSFER_CHARACTERISTICS_UNSPECIFIED = SDL_TRANSFER_CHARACTERISTICS_UNSPECIFIED,
    RC2D_TRANSFER_CHARACTERISTICS_GAMMA22 = SDL_TRANSFER_CHARACTERISTICS_GAMMA22,
    RC2D_TRANSFER_CHARACTERISTICS_GAMMA28 = SDL_TRANSFER_CHARACTERISTICS_GAMMA28,
    RC2D_TRANSFER_CHARACTERISTICS_BT601 = SDL_TRANSFER_CHARACTERISTICS_BT601,
    RC2D_TRANSFER_CHARACTERISTICS_SMPTE240 = SDL_TRANSFER_CHARACTERISTICS_SMPTE240,
    RC2D_TRANSFER_CHARACTERISTICS_LINEAR = SDL_TRANSFER_CHARACTERISTICS_LINEAR,
    RC2D_TRANSFER_CHARACTERISTICS_LOG100 = SDL_TRANSFER_CHARACTERISTICS_LOG100,
    RC2D_TRANSFER_CHARACTERISTICS_LOG100_SQRT10 = SDL_TRANSFER_CHARACTERISTICS_LOG100_SQRT10,
    RC2D_TRANSFER_CHARACTERISTICS_IEC61966 = SDL_TRANSFER_CHARACTERISTICS_IEC61966,
    RC2D_TRANSFER_CHARACTERISTICS_BT1361 = SDL_TRANSFER_CHARACTERISTICS_BT1361,
    RC2D_TRANSFER_CHARACTERISTICS_SRGB = SDL_TRANSFER_CHARACTERISTICS_SRGB,
    RC2D_TRANSFER_CHARACTERISTICS_BT2020_10BIT = SDL_TRANSFER_CHARACTERISTICS_BT2020_10BIT,
    RC2D_TRANSFER_CHARACTERISTICS_BT2020_12BIT = SDL_TRANSFER_CHARACTERISTICS_BT2020_12BIT,
    RC2D_TRANSFER_CHARACTERISTICS_PQ = SDL_TRANSFER_CHARACTERISTICS_PQ,
    RC2D_TRANSFER_CHARACTERISTICS_SMPTE428 = SDL_TRANSFER_CHARACTERISTICS_SMPTE428,
    RC2D_TRANSFER_CHARACTERISTICS_HLG = SDL_TRANSFER_CHARACTERISTICS_HLG,
    RC2D_TRANSFER_CHARACTERISTICS_CUSTOM = SDL_TRANSFER_CHARACTERISTICS_CUSTOM
} RC2D_TransferCharacteristics;

/**
 * Coefficients de la matrice de l'espace colorimétrique.
 *
 * Ces coefficients sont décrits à l'adresse suivante : https://www.itu.int/rec/T-REC-H.273-201612-S/en
 * 
 * \since Cette énumération est disponible depuis RC2D 1.0.0.
 */
typedef enum RC2D_MatrixCoefficients {
    RC2D_MATRIX_COEFFICIENTS_IDENTITY = SDL_MATRIX_COEFFICIENTS_IDENTITY,
    RC2D_MATRIX_COEFFICIENTS_BT709 = SDL_MATRIX_COEFFICIENTS_BT709,
    RC2D_MATRIX_COEFFICIENTS_UNSPECIFIED = SDL_MATRIX_COEFFICIENTS_UNSPECIFIED,
    RC2D_MATRIX_COEFFICIENTS_FCC = SDL_MATRIX_COEFFICIENTS_FCC,
    RC2D_MATRIX_COEFFICIENTS_BT470BG = SDL_MATRIX_COEFFICIENTS_BT470BG,
    RC2D_MATRIX_COEFFICIENTS_BT601 = SDL_MATRIX_COEFFICIENTS_BT601,
    RC2D_MATRIX_COEFFICIENTS_SMPTE240 = SDL_MATRIX_COEFFICIENTS_SMPTE240,
    RC2D_MATRIX_COEFFICIENTS_YCGCO = SDL_MATRIX_COEFFICIENTS_YCGCO,
    RC2D_MATRIX_COEFFICIENTS_BT2020_NCL = SDL_MATRIX_COEFFICIENTS_BT2020_NCL,
    RC2D_MATRIX_COEFFICIENTS_BT2020_CL = SDL_MATRIX_COEFFICIENTS_BT2020_CL,
    RC2D_MATRIX_COEFFICIENTS_SMPTE2085 = SDL_MATRIX_COEFFICIENTS_SMPTE2085,
    RC2D_MATRIX_COEFFICIENTS_CHROMA_DERIVED_NCL = SDL_MATRIX_COEFFICIENTS_CHROMA_DERIVED_NCL,
    RC2D_MATRIX_COEFFICIENTS_CHROMA_DERIVED_CL = SDL_MATRIX_COEFFICIENTS_CHROMA_DERIVED_CL,
    RC2D_MATRIX_COEFFICIENTS_ICTCP = SDL_MATRIX_COEFFICIENTS_ICTCP,
    RC2D_MATRIX_COEFFICIENTS_CUSTOM = SDL_MATRIX_COEFFICIENTS_CUSTOM
} RC2D_MatrixCoefficients;

/**
* Emplacement de l'échantillon de chroma de l'espace colorimétrique.
 *
 * \since Cette énumération est disponible depuis RC2D 1.0.0.
 */
typedef enum RC2D_ChromaLocation {
    RC2D_CHROMA_LOCATION_NONE = SDL_CHROMA_LOCATION_NONE,
    RC2D_CHROMA_LOCATION_LEFT = SDL_CHROMA_LOCATION_LEFT,
    RC2D_CHROMA_LOCATION_CENTER = SDL_CHROMA_LOCATION_CENTER,
    RC2D_CHROMA_LOCATION_TOPLEFT = SDL_CHROMA_LOCATION_TOPLEFT
} RC2D_ChromaLocation;

/* Alpha macros */
#define RC2D_ALPHA_OPAQUE SDL_ALPHA_OPAQUE
#define RC2D_ALPHA_OPAQUE_FLOAT SDL_ALPHA_OPAQUE_FLOAT
#define RC2D_ALPHA_TRANSPARENT SDL_ALPHA_TRANSPARENT
#define RC2D_ALPHA_TRANSPARENT_FLOAT SDL_ALPHA_TRANSPARENT_FLOAT

/* Pixel format and colorspace definition macros */
#define RC2D_DEFINE_PIXELFOURCC(A, B, C, D) SDL_DEFINE_PIXELFOURCC(A, B, C, D)
#define RC2D_DEFINE_PIXELFORMAT(type, order, layout, bits, bytes) SDL_DEFINE_PIXELFORMAT(type, order, layout, bits, bytes)
#define RC2D_DEFINE_COLORSPACE(type, range, primaries, transfer, matrix, chroma) SDL_DEFINE_COLORSPACE(type, range, primaries, transfer, matrix, chroma)

/* Pixel format inspection macros */
#define RC2D_PIXELFLAG(format) SDL_PIXELFLAG(format)
#define RC2D_PIXELTYPE(format) SDL_PIXELTYPE(format)
#define RC2D_PIXELORDER(format) SDL_PIXELORDER(format)
#define RC2D_PIXELLAYOUT(format) SDL_PIXELLAYOUT(format)
#define RC2D_BITSPERPIXEL(format) SDL_BITSPERPIXEL(format)
#define RC2D_BYTESPERPIXEL(format) SDL_BYTESPERPIXEL(format)
#define RC2D_ISPIXELFORMAT_INDEXED(format) SDL_ISPIXELFORMAT_INDEXED(format)
#define RC2D_ISPIXELFORMAT_PACKED(format) SDL_ISPIXELFORMAT_PACKED(format)
#define RC2D_ISPIXELFORMAT_ARRAY(format) SDL_ISPIXELFORMAT_ARRAY(format)
#define RC2D_ISPIXELFORMAT_10BIT(format) SDL_ISPIXELFORMAT_10BIT(format)
#define RC2D_ISPIXELFORMAT_FLOAT(format) SDL_ISPIXELFORMAT_FLOAT(format)
#define RC2D_ISPIXELFORMAT_ALPHA(format) SDL_ISPIXELFORMAT_ALPHA(format)
#define RC2D_ISPIXELFORMAT_FOURCC(format) SDL_ISPIXELFORMAT_FOURCC(format)

/* Colorspace inspection macros */
#define RC2D_COLORSPACETYPE(cspace) SDL_COLORSPACETYPE(cspace)
#define RC2D_COLORSPACERANGE(cspace) SDL_COLORSPACERANGE(cspace)
#define RC2D_COLORSPACECHROMA(cspace) SDL_COLORSPACECHROMA(cspace)
#define RC2D_COLORSPACEPRIMARIES(cspace) SDL_COLORSPACEPRIMARIES(cspace)
#define RC2D_COLORSPACETRANSFER(cspace) SDL_COLORSPACETRANSFER(cspace)
#define RC2D_COLORSPACEMATRIX(cspace) SDL_COLORSPACEMATRIX(cspace)
#define RC2D_ISCOLORSPACE_MATRIX_BT601(cspace) SDL_ISCOLORSPACE_MATRIX_BT601(cspace)
#define RC2D_ISCOLORSPACE_MATRIX_BT709(cspace) SDL_ISCOLORSPACE_MATRIX_BT709(cspace)
#define RC2D_ISCOLORSPACE_MATRIX_BT2020_NCL(cspace) SDL_ISCOLORSPACE_MATRIX_BT2020_NCL(cspace)
#define RC2D_ISCOLORSPACE_LIMITED_RANGE(cspace) SDL_ISCOLORSPACE_LIMITED_RANGE(cspace)
#define RC2D_ISCOLORSPACE_FULL_RANGE(cspace) SDL_ISCOLORSPACE_FULL_RANGE(cspace)

/* Termine les définitions de fonctions C lors de l'utilisation de C++ */
#ifdef __cplusplus
}
#endif

#endif // RC2D_PIXELS_H